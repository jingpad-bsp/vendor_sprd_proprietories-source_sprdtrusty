/*
 * Copyright (c) 2019, Spreadtrum Communications.
 *
 * The above copyright notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#pragma once

#define OEMCRYPTO_PORT "com.android.trusty.oemcrypto"
#define OEMCRYPTO_MAX_BUFFER_LENGTH (32*4096)

// Commands
enum oemcrypto_command {
    OEMCRYPTO_RESP_BIT                          = 1,
    OEMCRYPTO_CONT_BIT                          = 2,
    OEMCRYPTO_REQ_SHIFT                         = 1,
    OEMCRYPTO_INITIALIZE                        = ( 1 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_TERMINATE                         = ( 2 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_INSTALLKEYBOX                     = ( 3 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_INSTALLROOTKEYCERTIFICATE         = ( 3 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_INSTALLKEYBOXOROEMCERT            = ( 3 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETKEYDATA                        = ( 4 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_ISKEYBOXVALID                     = ( 5 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_ISROOTKEYCERTIFICATEVALID         = ( 5 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_ISKEYBOXOROEMCERTVALID            = ( 5 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETRANDOM                         = ( 6 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETDEVICEID                       = ( 7 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_WRAPKEYBOX                        = ( 8 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_WRAPROOTKEYCERTIFICATE            = ( 8 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_WRAPKEYBOXOROEMCERT               = ( 8 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_OPENSESSION                       = ( 9 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_CLOSESESSION                      = (10 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_DECRYPTCTR_V10                    = (11 << OEMCRYPTO_REQ_SHIFT),   /*deprecated in v13*/
    OEMCRYPTO_GENERATEDERIVEDKEYS               = (12 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GENERATESIGNATURE                 = (13 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GENERATENONCE                     = (14 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADKEYS_V8                       = (15 << OEMCRYPTO_REQ_SHIFT),   /*deprecated in v13*/
    OEMCRYPTO_REFRESHKEYS_V14                   = (16 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SELECTKEY_V13                     = (17 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_REWRAPDEVICERSAKEY                = (18 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADDEVICERSAKEY                  = (19 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GENERATERSASIGNATURE_V8           = (20 << OEMCRYPTO_REQ_SHIFT),   /*deprecated in v13*/
    OEMCRYPTO_DERIVEKEYSFROMSESSIONKEY          = (21 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_APIVERSION                        = (22 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SECURITY_LEVEL                    = (23 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GENERIC_ENCRYPT                   = (24 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GENERIC_DECRYPT                   = (25 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GENERIC_SIGN                      = (26 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GENERIC_VERIFY                    = (27 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETHDCPCAPABILITY_V9              = (28 << OEMCRYPTO_REQ_SHIFT),   /*deprecated in v13*/
    OEMCRYPTO_SUPPORTSUSAGETABLE                = (29 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_UPDATEUSAGETABLE                  = (30 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_DEACTIVATEUSAGEENTRY_V12          = (31 << OEMCRYPTO_REQ_SHIFT),   /*deprecated in v13*/
    OEMCRYPTO_REPORTUSAGE                       = (32 << OEMCRYPTO_REQ_SHIFT),   /*changed in v13 add new state*/
    OEMCRYPTO_DELETEUSAGEENTRY                  = (33 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_DELETEOLDUSAGETABLE               = (34 << OEMCRYPTO_REQ_SHIFT),   /*change name&meaning in v13*/
    OEMCRYPTO_LOADKEYS_V9_OR_V10                = (35 << OEMCRYPTO_REQ_SHIFT),   /*deprecated in v13*/
    OEMCRYPTO_GENERATERSASIGNATURE              = (36 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETMAXNUMBEROFSESSIONS            = (37 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETNUMBEROFOPENSESSIONS           = (38 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_ISANTIROLLBACKHWPRESENT           = (39 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_COPYBUFFER_V14                    = (40 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_QUERYKEYCONTROL                   = (41 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADTESTKEYBOX_V13                = (42 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_FORCEDELETEUSAGEENTRY             = (43 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETHDCPCAPABILITY                 = (44 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADTESTRSAKEY                    = (45 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SECURITY_PATCH_LEVEL              = (46 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADKEYS_V11_or_V12               = (47 << OEMCRYPTO_REQ_SHIFT),   /*deprecated in v13*/
    OEMCRYPTO_DECRYPTCENC                       = (48 << OEMCRYPTO_REQ_SHIFT),   /*changed in v13*/
    OEMCRYPTO_GETPROVISIONINGMETHOD             = (49 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETOEMPUBLICCERTIFICATE           = (50 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_REWRAPDEVICERSAKEY30              = (51 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SUPPORTEDCERTIFICATES             = (52 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_ISSRMUPDATESUPPORTED              = (53 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETCURRENTSRMVERSION              = (54 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADSRM                           = (55 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADKEYS_V13                      = (56 << OEMCRYPTO_REQ_SHIFT),   /*old interface 47 with new definition*/
    OEMCRYPTO_REMOVESRM                         = (57 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_CREATEUSAGETABLEHEADER            = (61 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADUSAGETABLEHEADER              = (62 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_CREATENEWUSAGEENTRY               = (63 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADUSAGEENTRY                    = (64 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_UPDATEUSAGEENTRY                  = (65 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_DEACTIVATEUSAGEENTRY              = (66 << OEMCRYPTO_REQ_SHIFT),   /*old interface 31 with new definition*/
    OEMCRYPTO_SHRINKUSAGETABLEHEADER            = (67 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_MOVEENTRY                         = (68 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_COPYOLDUSAGEENTRY                 = (69 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_CREATEOLDUSAGEENTRY               = (70 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETANALOGOUTPUTFLAGS              = (71 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADTESTKEYBOX                    = (78 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADENTITLEDCONTENTKEYS_V14       = (79 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SELECTKEY                         = (81 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADKEYS_V14                      = (82 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADKEYS                          = (83 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SETSANDBOX                        = (84 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_RESOURCERATINGTIER                = (85 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SUPPORTDECRYPTHASH                = (86 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_INITIALIZEDECRYPTHASH             = (87 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_SETDECRYPTHASH                    = (88 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_GETHASHERRORCODE                  = (89 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_BUILDINFORMATION                  = (90 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_REFRESHKEYS                       = (91 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_LOADENTITLEDCONTENTKEYS           = (92 << OEMCRYPTO_REQ_SHIFT),
    OEMCRYPTO_COPYBUFFER                        = (93 << OEMCRYPTO_REQ_SHIFT),
};

#define TEST_SESSION_REQ_SHIFT   (1000)
enum session_test_command {
    TEST_SESSION_OPEN              = (1 << TEST_SESSION_REQ_SHIFT),
};

#ifdef __ANDROID__

/**
 * oemcrypto_message - Serial header for communicating with oemcrypto server
 * @cmd: the command, one of oemcrypto_command.
 * @payload: start of the serialized command specific payload
 */
struct oemcrypto_message {
    uint32_t   cmd;
    uint8_t    payload[0];
};

#endif
